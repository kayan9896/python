const path = require('path');
const { app, BrowserWindow } = require('electron');
const isDev = require('electron-is-dev');

function createWindow() {
  const win = new BrowserWindow({
    width: 800,
    height: 600,
    webPreferences: {
      nodeIntegration: true,
      contextIsolation: false,
      enableRemoteModule: true,
    }
  });

  win.loadURL(
    isDev
      ? 'http://localhost:3000'
      : `file://${path.join(__dirname, '../build/index.html')}`
  );

  // Open DevTools in development mode
  if (isDev) {
    win.webContents.openDevTools();
  }
}

app.whenReady().then(createWindow);



{
  "build": {
    "appId": "com.example.yourapp",
    "files": [
      "build/**/*",
      "node_modules/**/*"
    ],
    "directories": {
      "buildResources": "assets"
    }
  }



function createWindow() {
  const win = new BrowserWindow({
    width: 800,
    height: 600,
    webPreferences: {
      nodeIntegration: true,
      contextIsolation: false,
    }
  });

  const startUrl = isDev
    ? 'http://localhost:3000'
    : `file://${path.join(__dirname, '../build/index.html')}`;

  console.log('Starting URL:', startUrl);
  
  win.loadURL(startUrl).catch(err => {
    console.error('Failed to load URL:', err);
  });

  win.webContents.on('did-fail-load', (event, errorCode, errorDescription) => {
    console.error('Page failed to load');
    console.error(errorCode, errorDescription);
  });

  // Rest of your createWindow function
}



{
  "scripts": {
    "react-build": "react-scripts build",
    "electron-build": "webpack --config webpack.electron.config.js",
    "build": "npm run react-build && npm run electron-build",
    "electron-pack": "npm run build && electron-builder -c.extraMetadata.main=dist/electron.js"
  }
}



const url = require('url');

// In createWindow function:
win.loadURL(
  isDev
    ? 'http://localhost:3000'
    : url.format({
        pathname: path.join(__dirname, '../build/index.html'),
        protocol: 'file:',
        slashes: true
      })
);
